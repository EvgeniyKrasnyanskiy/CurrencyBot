version: '3.8'

services:
  currency-bot:
    build: .
    container_name: currency-bot
    restart: unless-stopped
    ports:
      - "8000:8000"  # Метрики Prometheus
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    environment:
      - BOT_TOKEN=${BOT_TOKEN}
      - CHANNEL_ID=${CHANNEL_ID}
      - TOPIC_ID=${TOPIC_ID}
      - ADMINS=${ADMINS}
      - SLEEP_TIME=${SLEEP_TIME:-600}
      - CACHE_TTL=${CACHE_TTL:-300}
    networks:
      - bot-network

  # Redis для кеширования (опционально)
  redis:
    image: redis:7-alpine
    container_name: currency-bot-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - bot-network

  # Prometheus для мониторинга
  prometheus:
    image: prom/prometheus:latest
    container_name: currency-bot-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - bot-network

  # Grafana для визуализации
  grafana:
    image: grafana/grafana:latest
    container_name: currency-bot-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - bot-network

volumes:
  redis-data:
  prometheus-data:
  grafana-data:

networks:
  bot-network:
    driver: bridge 